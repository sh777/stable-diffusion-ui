name: Build and Push

on:
  workflow_dispatch:
  push:

jobs:
  build-and-push-image:
    # Name of the job which will be shown on the web console
    name: Build and Push Docker Image
    # Use a list of labels to determine which runner the workflow will run on
    runs-on:
      - ubuntu-latest
    env: 
      DOCKER_REPOSITORY_NAME: cnplatform
      DOCKER_IMAGE_NAME: stable-diffusion-ui
      DOCKER_TAG_PREFIX: v2.5.24

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE on runner, so your workflow can access it
      - uses: actions/checkout@v3

      - name: Login Docker Registry
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_REGISTRY_USERNAME }}
          password: ${{ secrets.DOCKER_REGISTRY_PASSWORD }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ${{env.DOCKER_REPOSITORY_NAME}}/${{env.DOCKER_IMAGE_NAME}}
          tags: |
            type=ref,event=branch
            type=ref,event=tag
            type=ref,event=pr
          flavor: |
            latest=true
            suffix=-${{env.DOCKER_TAG_PREFIX}}

       # To build and push Docker image with Buildx with full support of the features provided by Moby BuildKit builder toolkit
      - name: Build and push
        #id: A unique identifier for the step. You can use the id to reference the step in contexts
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          # push: Push the build result to registry, default: false
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          # Do not use cache when building the image
          no-cache: true
          # secrets: Set the variables which will be delivered to Dockerfile to build Java